---
- name: Get information about the on prem VM
  community.libvirt.virt:
    command: info
    name: "{{ move_vm_from_on_prem_to_aws_on_prem_vm_name }}"
    uri: "{{ move_vm_from_on_prem_to_aws_uri }}"
  register: move_vm_from_on_prem_to_aw__vm_info

- name: Fail when on prem VM does not exist
  ansible.builtin.fail:
    msg: "The on prem VM {{ move_vm_from_on_prem_to_aws_on_prem_vm_name }} does not exist."
  when: move_vm_from_on_prem_to_aws_on_prem_vm_name not in move_vm_from_on_prem_to_aw__vm_info

- name: Fail when on prem VM's state is destroyed
  ansible.builtin.fail:
    msg: "The VM {{ source_vm_name }} has been destroyed."
  when: _result_vm_info[source_vm_name].state == "destroyed"

- name: Ensure on prem VM is paused
  community.libvirt.virt:
    state: paused
    name: "{{ move_vm_from_on_prem_to_aws_on_prem_vm_name }}"
    uri: "{{ move_vm_from_on_prem_to_aws_uri }}"
  when: move_vm_from_on_prem_to_aw__vm_info[move_vm_from_on_prem_to_aws_on_prem_vm_name].state == "running"

- set_fact:
    move_vm_from_on_prem_to_aws__clone_path: "{{ move_vm_from_on_prem_to_aws__tmpdir.path }}/{{ move_vm_from_on_prem_to_aws_aws_vm_name }}.qcow2"
    move_vm_from_on_prem_to_aws__raw_image_path: "{{ move_vm_from_on_prem_to_aws__tmpdir.path }}/{{ move_vm_from_on_prem_to_aws_aws_vm_name }}.raw"

- name: Cloning {{ move_vm_from_on_prem_to_aws_on_prem_vm_name }} on prem VM
  command: |
          virt-clone --original {{ move_vm_from_on_prem_to_aws_on_prem_vm_name }} \
                    --name {{ move_vm_from_on_prem_to_aws_aws_vm_name }} \
                    --file {{ move_vm_from_on_prem_to_aws__clone_path }}
  environment:
    LIBVIRT_DEFAULT_URI: "{{ move_vm_from_on_prem_to_aws_uri }}"

- name: Get information about the clone
  stat:
    path: "{{ move_vm_from_on_prem_to_aws__clone_path }}"
  register: move_vm_from_on_prem_to_aws__clone_info

# Priviledge escalation is needed because the .qcow2 file is owned by root
# when default hypervisor is used
- name: Convert qcow2 to raw using qemu-img with priviledge escalation
  command: |
          qemu-img convert -f qcow2 -O raw \
                          {{ move_vm_from_on_prem_to_aws__clone_path }} \
                          {{ move_vm_from_on_prem_to_aws__raw_image_path }}
  become: true
  become_method: sudo
  environment:
    LIBVIRT_DEFAULT_URI: "{{ move_vm_from_on_prem_to_aws_uri }}"
  when: move_vm_from_on_prem_to_aws__clone_info.stat.exists and move_vm_from_on_prem_to_aws__clone_info.stat.pw_name == "root"

- name: Convert qcow2 to raw using qemu-img
  command: |
          qemu-img convert -f qcow2 -O raw \
                          {{ move_vm_from_on_prem_to_aws__clone_path }} \
                          {{ move_vm_from_on_prem_to_aws__raw_image_path }}
  environment:
    LIBVIRT_DEFAULT_URI: "{{ move_vm_from_on_prem_to_aws_uri }}"
  when: move_vm_from_on_prem_to_aws__clone_info.stat.exists and move_vm_from_on_prem_to_aws__clone_info.stat.pw_name != "root"

- name: Create temporary directory to fetch the raw in on localhost
  ansible.builtin.tempfile:
    state: directory
    suffix: .storage
  register: move_vm_from_on_prem_to_aws__tmpdir_localhost
  notify:
    - 'Delete temporary directory'
  delegate_to: localhost

- name: Fetch the converted RAW image to localhost
  ansible.builtin.fetch:
    src: "{{ move_vm_from_on_prem_to_aws__raw_image_path }}"
    dest: "{{ move_vm_from_on_prem_to_aws__tmpdir_localhost.path }}"
    flat: yes
    fail_on_missing: yes
    validate_checksum: true
